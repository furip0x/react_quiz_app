{"version":3,"sources":["components/Header.js","components/Helpers/Context.js","components/MainMenu.js","components/Helpers/QuestionBank.js","components/EndScreen.js","components/Quiz.js","App.js","index.js"],"names":["Header","className","QuizContext","createContext","MainMenu","useState","isError","setIsError","useContext","setGameState","name","setName","onSubmit","e","preventDefault","htmlFor","type","id","value","onChange","target","Questions","prompt","optionA","optionB","optionC","optionD","answer","EndScreen","showQuizAnswers","setShowQuizAnswers","score","setScore","answers","setAnswers","map","question","class","onClick","join","length","Quiz","currQuestion","setCurrQuestion","optionChosen","setOptionChosen","prevAnswers","App","gameState","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53821f01.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className='header'>\r\n      <h1 className='header-title'>Quiz App</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { createContext } from 'react'\r\n\r\nexport const QuizContext = createContext()\r\n","import React, { useContext, useState } from 'react'\r\nimport { QuizContext } from './Helpers/Context'\r\n\r\nconst MainMenu = () => {\r\n  const [isError, setIsError] = useState(false)\r\n  const { setGameState, name, setName } = useContext(QuizContext)\r\n\r\n  const handleForm = (e) => {\r\n    e.preventDefault()\r\n    if (name) {\r\n      setGameState('quiz')\r\n      setIsError(false)\r\n    } else {\r\n      setIsError(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className='menu'>\r\n      <form onSubmit={handleForm}>\r\n        <label htmlFor='name'>Enter your name:</label>\r\n        <input\r\n          type='text'\r\n          id='name'\r\n          name='name'\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <button>Start Quiz</button>\r\n      </form>\r\n      <div className={`error ${isError ? '' : 'hide'}`}>\r\n        Please write your name\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default MainMenu\r\n","export const Questions = [\r\n  {\r\n    id: 1,\r\n    prompt: \"What's the biggest animal in the world?\",\r\n    optionA: 'Elephant',\r\n    optionB: 'Ostrich',\r\n    optionC: 'Blue Whale',\r\n    optionD: 'Saltwater Crocodile',\r\n    answer: 'C',\r\n  },\r\n  {\r\n    id: 2,\r\n    prompt: 'Who painted Mona Lisa?',\r\n    optionA: 'Michelangelo',\r\n    optionB: 'Leonardo da Vinci',\r\n    optionC: 'Vincent Van Gogh',\r\n    optionD: 'Salvador Dali',\r\n    answer: 'B',\r\n  },\r\n  {\r\n    id: 3,\r\n    prompt: 'Which planet is closest to the sun?',\r\n    optionA: 'Venus',\r\n    optionB: 'Mars',\r\n    optionC: 'Saturn',\r\n    optionD: 'Mercury',\r\n    answer: 'D',\r\n  },\r\n  {\r\n    id: 4,\r\n    prompt: 'What is the largest country in the world?',\r\n    optionA: 'Russia',\r\n    optionB: 'USA',\r\n    optionC: 'China',\r\n    optionD: 'Australia',\r\n    answer: 'A',\r\n  },\r\n  {\r\n    id: 5,\r\n    prompt: 'How many elements are there in the periodic table?',\r\n    optionA: '87',\r\n    optionB: '92',\r\n    optionC: '123',\r\n    optionD: '118',\r\n    answer: 'D',\r\n  },\r\n  {\r\n    id: 6,\r\n    prompt: 'What does He stand for on the periodic table?',\r\n    optionA: 'Helium',\r\n    optionB: 'Hassium',\r\n    optionC: 'Xenon',\r\n    optionD: 'Ruthenium',\r\n    answer: 'A',\r\n  },\r\n  {\r\n    id: 7,\r\n    prompt: 'How many sides does a heptadecagon have?',\r\n    optionA: 'Ten',\r\n    optionB: 'Thirteen',\r\n    optionC: 'Seventeen',\r\n    optionD: 'Nine',\r\n    answer: 'C',\r\n  },\r\n  {\r\n    id: 8,\r\n    prompt: 'What star sign would someone born on August 24th be?',\r\n    optionA: 'Leo',\r\n    optionB: 'Scorpio',\r\n    optionC: 'Virgo',\r\n    optionD: 'Taurus',\r\n    answer: 'C',\r\n  },\r\n  {\r\n    id: 9,\r\n    prompt: 'What is the smallest country in the world?',\r\n    optionA: 'Vatican City',\r\n    optionB: 'Monaco',\r\n    optionC: 'Maldives',\r\n    optionD: 'Panama',\r\n    answer: 'A',\r\n  },\r\n]\r\n","import React, { useContext, useState } from 'react'\r\nimport { QuizContext } from './Helpers/Context'\r\nimport { Questions } from './Helpers/QuestionBank'\r\n\r\nconst EndScreen = () => {\r\n  const [showQuizAnswers, setShowQuizAnswers] = useState(false)\r\n  const { score, setScore, setGameState, answers, setAnswers, name } =\r\n    useContext(QuizContext)\r\n\r\n  const restartGame = () => {\r\n    setGameState('menu')\r\n    setScore(0)\r\n    setAnswers([])\r\n  }\r\n\r\n  if (!showQuizAnswers) {\r\n    return (\r\n      <section className='end-screen'>\r\n        <div className='col'>\r\n          <h1>\r\n            Here are your results <span>{name}</span>\r\n          </h1>\r\n          <div className='answers'>\r\n            <div className='answers-item'>\r\n              <h2>Your answers:</h2>\r\n              <div className='answers-list'>{answers.join(', ')}</div>\r\n            </div>\r\n            <div className='answers-item'>\r\n              <h2>Correct answers:</h2>\r\n              <div className='answers-list'>\r\n                {/* {Questions.join(', ')} */}\r\n                {Questions.map((question) => {\r\n                  return question.answer\r\n                }).join(', ')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='col'>\r\n          <div className='score'>\r\n            {score} / {Questions.length}\r\n          </div>\r\n          <button className='submit-btn' onClick={restartGame}>\r\n            Restart\r\n          </button>\r\n          <button\r\n            className='submit-btn submit-btn__answer'\r\n            onClick={() => setShowQuizAnswers(true)}\r\n          >\r\n            See Answers\r\n          </button>\r\n        </div>\r\n      </section>\r\n    )\r\n  } else {\r\n    return (\r\n      <section className='questions-answer-list'>\r\n        {Questions.map((question) => {\r\n          let answer = ''\r\n          switch (question.answer) {\r\n            case 'A':\r\n              answer = question.optionA\r\n              break\r\n            case 'B':\r\n              answer = question.optionB\r\n              break\r\n            case 'C':\r\n              answer = question.optionC\r\n              break\r\n            case 'D':\r\n              answer = question.optionD\r\n              break\r\n          }\r\n          return (\r\n            <div key={question.id} class='question-answer-item'>\r\n              <h3>{question.prompt}</h3>\r\n              <span>{answer}</span>\r\n            </div>\r\n          )\r\n        })}\r\n        <button\r\n          className='submit-btn'\r\n          onClick={() => setShowQuizAnswers(false)}\r\n        >\r\n          Return to results\r\n        </button>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EndScreen\r\n","import React, { useState, useContext } from 'react'\r\nimport { QuizContext } from './Helpers/Context'\r\nimport { Questions } from './Helpers/QuestionBank'\r\n\r\nconst Quiz = () => {\r\n  const { score, setScore, setGameState, answers, setAnswers } =\r\n    useContext(QuizContext)\r\n  const [currQuestion, setCurrQuestion] = useState(0)\r\n  const [optionChosen, setOptionChosen] = useState('')\r\n\r\n  const [isError, setIsError] = useState(false)\r\n\r\n  const nextQuestion = () => {\r\n    if (optionChosen) {\r\n      if (Questions[currQuestion].answer === optionChosen) {\r\n        setScore(score + 1)\r\n      }\r\n      setCurrQuestion(currQuestion + 1)\r\n      setAnswers((prevAnswers) => {\r\n        return [...prevAnswers, optionChosen]\r\n      })\r\n      setIsError(false)\r\n      setOptionChosen('')\r\n    } else {\r\n      setIsError(true)\r\n    }\r\n  }\r\n\r\n  const finishQuiz = () => {\r\n    if (optionChosen) {\r\n      if (Questions[currQuestion].answer === optionChosen) {\r\n        setScore(score + 1)\r\n      }\r\n      setAnswers((prevAnswers) => {\r\n        return [...prevAnswers, optionChosen]\r\n      })\r\n      setGameState('endScreen')\r\n      setIsError(false)\r\n    } else {\r\n      setIsError(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className='quiz'>\r\n      <h1>{Questions[currQuestion].prompt}</h1>\r\n      <div className='options'>\r\n        <button onClick={() => setOptionChosen('A')}>\r\n          {Questions[currQuestion].optionA}\r\n        </button>\r\n        <button onClick={() => setOptionChosen('B')}>\r\n          {Questions[currQuestion].optionB}\r\n        </button>\r\n        <button onClick={() => setOptionChosen('C')}>\r\n          {Questions[currQuestion].optionC}\r\n        </button>\r\n        <button onClick={() => setOptionChosen('D')}>\r\n          {Questions[currQuestion].optionD}\r\n        </button>\r\n      </div>\r\n\r\n      {currQuestion === Questions.length - 1 ? (\r\n        <button className='submit-btn' onClick={finishQuiz}>\r\n          Finish Quiz\r\n        </button>\r\n      ) : (\r\n        <button className='submit-btn' onClick={nextQuestion}>\r\n          Next Question\r\n        </button>\r\n      )}\r\n      <div className={`error ${isError ? '' : 'hide'}`}>\r\n        Please choose an answer\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Quiz\r\n","import React, { useState } from 'react'\nimport Header from './components/Header'\nimport MainMenu from './components/MainMenu'\nimport EndScreen from './components/EndScreen'\nimport Quiz from './components/Quiz'\nimport { QuizContext } from './components/Helpers/Context'\n\nfunction App() {\n  const [gameState, setGameState] = useState('menu')\n  const [score, setScore] = useState(0)\n  const [answers, setAnswers] = useState([])\n  const [name, setName] = useState('')\n\n  return (\n    <QuizContext.Provider\n      value={{\n        gameState,\n        setGameState,\n        score,\n        setScore,\n        answers,\n        setAnswers,\n        name,\n        setName,\n      }}\n    >\n      <div className='quiz-wrapper'>\n        <Header />\n        <main className='quiz-body'>\n          {gameState === 'menu' && <MainMenu />}\n          {gameState === 'quiz' && <Quiz />}\n          {gameState === 'endScreen' && <EndScreen />}\n        </main>\n      </div>\n    </QuizContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}